{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountCustomers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "customers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ethAmount",
          "type": "uint256"
        }
      ],
      "name": "getConversionRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paymentFinal",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/vishe/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
    "1": "C:/Users/vishe/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/vendor/SafeMathChainlink.sol",
    "3": "contracts/demoTest.sol"
  },
  "ast": {
    "absolutePath": "contracts/demoTest.sol",
    "exportedSymbols": {
      "demoTest": [
        230
      ]
    },
    "id": 231,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 53,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:3"
      },
      {
        "absolutePath": "C:/Users/vishe/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
        "id": 54,
        "nodeType": "ImportDirective",
        "scope": 231,
        "sourceUnit": 277,
        "src": "62:76:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/vishe/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@1.1.1/contracts/src/v0.6/vendor/SafeMathChainlink.sol",
        "file": "@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol",
        "id": 55,
        "nodeType": "ImportDirective",
        "scope": 231,
        "sourceUnit": 416,
        "src": "140:68:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 230,
        "linearizedBaseContracts": [
          230
        ],
        "name": "demoTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 58,
            "libraryName": {
              "contractScope": null,
              "id": 56,
              "name": "SafeMathChainlink",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 415,
              "src": "244:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMathChainlink_$415",
                "typeString": "library SafeMathChainlink"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "238:36:3",
            "typeName": {
              "id": 57,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "266:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "93c0c8d9",
            "id": 62,
            "mutability": "mutable",
            "name": "addressToAmountCustomers",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 230,
            "src": "282:59:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 61,
              "keyType": {
                "id": 59,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "290:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "282:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 60,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "301:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c0abda2a",
            "id": 65,
            "mutability": "mutable",
            "name": "customers",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 230,
            "src": "348:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 63,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "348:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 64,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "348:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 67,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 230,
            "src": "381:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 66,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "381:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "741bef1a",
            "id": 69,
            "mutability": "mutable",
            "name": "priceFeed",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 230,
            "src": "408:38:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$276",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "contractScope": null,
              "id": 68,
              "name": "AggregatorV3Interface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 276,
              "src": "408:21:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$276",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 85,
              "nodeType": "Block",
              "src": "497:93:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 74,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67,
                      "src": "508:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 75,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "516:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 76,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "516:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "508:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "508:18:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 79,
                      "name": "priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "537:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$276",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 81,
                          "name": "_priceFeed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "571:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 80,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 276,
                        "src": "549:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$276_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 82,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "549:33:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$276",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "537:45:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$276",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "537:45:3"
                }
              ]
            },
            "documentation": null,
            "id": 86,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "mutability": "mutable",
                  "name": "_priceFeed",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 86,
                  "src": "471:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "471:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "470:20:3"
            },
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "497:0:3"
            },
            "scope": 230,
            "src": "459:131:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 119,
              "nodeType": "Block",
              "src": "644:208:3",
              "statements": [
                {
                  "assignments": [
                    90
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 90,
                      "mutability": "mutable",
                      "name": "floorVal",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 119,
                      "src": "655:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 89,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "655:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 94,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_5000000000000000000_by_1",
                      "typeString": "int_const 5000000000000000000"
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "35",
                      "id": 91,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "674:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31653138",
                      "id": 92,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "678:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "674:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_5000000000000000000_by_1",
                      "typeString": "int_const 5000000000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "655:27:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 97,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "719:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 98,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "719:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 96,
                            "name": "getConversionRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 163,
                            "src": "701:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 99,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "701:28:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 100,
                          "name": "floorVal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90,
                          "src": "733:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "701:40:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 95,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "693:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "693:49:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "693:49:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 104,
                        "name": "addressToAmountCustomers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62,
                        "src": "758:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 107,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 105,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "783:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "783:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "758:36:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 108,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "798:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "798:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "758:49:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "758:49:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 115,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "833:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "833:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 112,
                        "name": "customers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65,
                        "src": "818:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "818:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "818:26:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "818:26:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "839a5937",
            "id": 120,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "paymentFinal",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 87,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "627:2:3"
            },
            "returnParameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "644:0:3"
            },
            "scope": 230,
            "src": "606:246:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 138,
              "nodeType": "Block",
              "src": "914:112:3",
              "statements": [
                {
                  "assignments": [
                    null,
                    126,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 126,
                      "mutability": "mutable",
                      "name": "answer",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 138,
                      "src": "928:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 125,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "928:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 130,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 127,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69,
                        "src": "951:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$276",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 128,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 275,
                      "src": "951:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "951:27:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "925:53:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 133,
                          "name": "answer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 126,
                          "src": "1004:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31653130",
                          "id": 134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1013:4:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000_by_1",
                            "typeString": "int_const 10000000000"
                          },
                          "value": "1e10"
                        },
                        "src": "1004:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "996:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 131,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "996:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "996:22:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 124,
                  "id": 137,
                  "nodeType": "Return",
                  "src": "989:29:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "9e87a5cd",
            "id": 139,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPriceFeed",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "881:2:3"
            },
            "returnParameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 139,
                  "src": "905:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "905:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "904:9:3"
            },
            "scope": 230,
            "src": "860:166:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 162,
              "nodeType": "Block",
              "src": "1108:155:3",
              "statements": [
                {
                  "assignments": [
                    147
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 147,
                      "mutability": "mutable",
                      "name": "ethPrice",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 162,
                      "src": "1119:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 146,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1119:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 150,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 148,
                      "name": "getPriceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139,
                      "src": "1138:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1138:14:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1119:33:3"
                },
                {
                  "assignments": [
                    152
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 152,
                      "mutability": "mutable",
                      "name": "ethAmountInUSD",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 162,
                      "src": "1163:22:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 151,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1163:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 159,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 153,
                            "name": "ethPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 147,
                            "src": "1189:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 154,
                            "name": "ethAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 141,
                            "src": "1198:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1189:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 156,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1188:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31653138",
                      "id": 157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1211:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "1188:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1163:52:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 160,
                    "name": "ethAmountInUSD",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 152,
                    "src": "1241:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 145,
                  "id": 161,
                  "nodeType": "Return",
                  "src": "1234:21:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6e5b6b28",
            "id": 163,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getConversionRate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 141,
                  "mutability": "mutable",
                  "name": "ethAmount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 163,
                  "src": "1061:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1061:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1060:19:3"
            },
            "returnParameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 163,
                  "src": "1100:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1100:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1099:9:3"
            },
            "scope": 230,
            "src": "1034:229:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 192,
              "nodeType": "Block",
              "src": "1322:175:3",
              "statements": [
                {
                  "assignments": [
                    169
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 169,
                      "mutability": "mutable",
                      "name": "floorVal",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 192,
                      "src": "1333:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 168,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1333:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 173,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_50000000000000000000_by_1",
                      "typeString": "int_const 50000000000000000000"
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "3530",
                      "id": 170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1352:2:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50_by_1",
                        "typeString": "int_const 50"
                      },
                      "value": "50"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31653138",
                      "id": 171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1357:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "1352:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_50000000000000000000_by_1",
                      "typeString": "int_const 50000000000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1333:28:3"
                },
                {
                  "assignments": [
                    175
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 175,
                      "mutability": "mutable",
                      "name": "price",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 192,
                      "src": "1372:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 174,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1372:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 178,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 176,
                      "name": "getPriceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 139,
                      "src": "1388:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1388:14:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1372:30:3"
                },
                {
                  "assignments": [
                    180
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 180,
                      "mutability": "mutable",
                      "name": "precision",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 192,
                      "src": "1413:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 179,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1413:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 184,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1433:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31653138",
                      "id": 182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1437:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "value": "1e18"
                    },
                    "src": "1433:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1413:28:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 185,
                            "name": "floorVal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 169,
                            "src": "1460:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 186,
                            "name": "precision",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 180,
                            "src": "1471:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1460:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 188,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1459:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 189,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 175,
                      "src": "1484:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1459:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 167,
                  "id": 191,
                  "nodeType": "Return",
                  "src": "1452:37:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d321fe29",
            "id": 193,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAmount",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1289:2:3"
            },
            "returnParameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 166,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 193,
                  "src": "1313:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1313:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1312:9:3"
            },
            "scope": 230,
            "src": "1271:226:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 203,
              "nodeType": "Block",
              "src": "1526:59:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 196,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1545:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1545:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 198,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "1559:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1545:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 195,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1537:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1537:28:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 201,
                  "nodeType": "ExpressionStatement",
                  "src": "1537:28:3"
                },
                {
                  "id": 202,
                  "nodeType": "PlaceholderStatement",
                  "src": "1576:1:3"
                }
              ]
            },
            "documentation": null,
            "id": 204,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1523:2:3"
            },
            "src": "1505:80:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 228,
              "nodeType": "Block",
              "src": "1638:100:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 210,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1657:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1657:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 212,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "1671:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1657:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 209,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1649:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1649:28:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 215,
                  "nodeType": "ExpressionStatement",
                  "src": "1649:28:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 223,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1716:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_demoTest_$230",
                                "typeString": "contract demoTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_demoTest_$230",
                                "typeString": "contract demoTest"
                              }
                            ],
                            "id": 222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1708:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 221,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1708:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1708:13:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1708:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 216,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1688:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1688:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1688:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1688:42:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 227,
                  "nodeType": "ExpressionStatement",
                  "src": "1688:42:3"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3ccfd60b",
            "id": 229,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 207,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 206,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 204,
                  "src": "1628:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1628:9:3"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1610:2:3"
            },
            "returnParameters": {
              "id": 208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1638:0:3"
            },
            "scope": 230,
            "src": "1593:145:3",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 231,
        "src": "212:1535:3"
      }
    ],
    "src": "35:1712:3"
  },
  "bytecode": "608060405234801561001057600080fd5b506040516104563803806104568339818101604052602081101561003357600080fd5b505160028054336001600160a01b031991821617909155600380549091166001600160a01b039092169190911790556103e5806100716000396000f3fe6080604052600436106100865760003560e01c80638da5cb5b116100595780638da5cb5b1461010a57806393c0c8d91461011f5780639e87a5cd14610152578063c0abda2a14610167578063d321fe291461019157610086565b80633ccfd60b1461008b5780636e5b6b2814610095578063741bef1a146100d1578063839a593714610102575b600080fd5b6100936101a6565b005b3480156100a157600080fd5b506100bf600480360360208110156100b857600080fd5b5035610203565b60408051918252519081900360200190f35b3480156100dd57600080fd5b506100e6610223565b604080516001600160a01b039092168252519081900360200190f35b610093610232565b34801561011657600080fd5b506100e66102a6565b34801561012b57600080fd5b506100bf6004803603602081101561014257600080fd5b50356001600160a01b03166102b5565b34801561015e57600080fd5b506100bf6102c7565b34801561017357600080fd5b506100e66004803603602081101561018a57600080fd5b5035610354565b34801561019d57600080fd5b506100bf61037b565b6002546001600160a01b031633146101bd57600080fd5b6002546001600160a01b031633146101d457600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610200573d6000803e3d6000fd5b50565b60008061020e6102c7565b670de0b6b3a764000093029290920492915050565b6003546001600160a01b031681565b674563918244f400008061024534610203565b101561025057600080fd5b5033600081815260208190526040812080543401905560018054808201825591527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319169091179055565b6002546001600160a01b031681565b60006020819052908152604090205481565b600080600360009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561031857600080fd5b505afa15801561032c573d6000803e3d6000fd5b505050506040513d60a081101561034257600080fd5b50602001516402540be4000291505090565b6001818154811061036157fe5b6000918252602090912001546001600160a01b0316905081565b60006802b5e3af16b1880000816103906102c7565b9050670de0b6b3a764000081838202816103a657fe5b0493505050509056fea2646970667358221220001ce0f7aa08150f1f65086a4d0f3d542d5b4c84aad1e9b9085c3e134c0a292a64736f6c634300060c0033",
  "bytecodeSha1": "88ef4b2418ab7f2e0c9312e1372a6807229d870c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "demoTest",
  "coverageMap": {
    "branches": {
      "0": {},
      "1": {},
      "3": {
        "demoTest.paymentFinal": {
          "8": [
            701,
            741,
            true
          ]
        },
        "demoTest.withdraw": {
          "7": [
            1657,
            1676,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {},
      "1": {},
      "3": {
        "demoTest.getAmount": {
          "6": [
            1452,
            1489
          ]
        },
        "demoTest.getPriceFeed": {
          "5": [
            989,
            1018
          ]
        },
        "demoTest.paymentFinal": {
          "2": [
            693,
            742
          ],
          "3": [
            758,
            807
          ],
          "4": [
            818,
            844
          ]
        },
        "demoTest.withdraw": {
          "0": [
            1649,
            1677
          ],
          "1": [
            1688,
            1730
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/AggregatorV3Interface",
    "smartcontractkit/chainlink-brownie-contracts@1.1.1/SafeMathChainlink"
  ],
  "deployedBytecode": "6080604052600436106100865760003560e01c80638da5cb5b116100595780638da5cb5b1461010a57806393c0c8d91461011f5780639e87a5cd14610152578063c0abda2a14610167578063d321fe291461019157610086565b80633ccfd60b1461008b5780636e5b6b2814610095578063741bef1a146100d1578063839a593714610102575b600080fd5b6100936101a6565b005b3480156100a157600080fd5b506100bf600480360360208110156100b857600080fd5b5035610203565b60408051918252519081900360200190f35b3480156100dd57600080fd5b506100e6610223565b604080516001600160a01b039092168252519081900360200190f35b610093610232565b34801561011657600080fd5b506100e66102a6565b34801561012b57600080fd5b506100bf6004803603602081101561014257600080fd5b50356001600160a01b03166102b5565b34801561015e57600080fd5b506100bf6102c7565b34801561017357600080fd5b506100e66004803603602081101561018a57600080fd5b5035610354565b34801561019d57600080fd5b506100bf61037b565b6002546001600160a01b031633146101bd57600080fd5b6002546001600160a01b031633146101d457600080fd5b60405133904780156108fc02916000818181858888f19350505050158015610200573d6000803e3d6000fd5b50565b60008061020e6102c7565b670de0b6b3a764000093029290920492915050565b6003546001600160a01b031681565b674563918244f400008061024534610203565b101561025057600080fd5b5033600081815260208190526040812080543401905560018054808201825591527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319169091179055565b6002546001600160a01b031681565b60006020819052908152604090205481565b600080600360009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561031857600080fd5b505afa15801561032c573d6000803e3d6000fd5b505050506040513d60a081101561034257600080fd5b50602001516402540be4000291505090565b6001818154811061036157fe5b6000918252602090912001546001600160a01b0316905081565b60006802b5e3af16b1880000816103906102c7565b9050670de0b6b3a764000081838202816103a657fe5b0493505050509056fea2646970667358221220001ce0f7aa08150f1f65086a4d0f3d542d5b4c84aad1e9b9085c3e134c0a292a64736f6c634300060c0033",
  "deployedSourceMap": "212:1535:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1593:145;;;:::i;:::-;;1034:229;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1034:229:3;;:::i;:::-;;;;;;;;;;;;;;;;408:38;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;408:38:3;;;;;;;;;;;;;;606:246;;;:::i;381:20::-;;;;;;;;;;;;;:::i;282:59::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;282:59:3;-1:-1:-1;;;;;282:59:3;;:::i;860:166::-;;;;;;;;;;;;;:::i;348:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;348:26:3;;:::i;1271:226::-;;;;;;;;;;;;;:::i;1593:145::-;1559:5;;-1:-1:-1;;;;;1559:5:3;1545:10;:19;1537:28;;;;;;1671:5:::1;::::0;-1:-1:-1;;;;;1671:5:3::1;1657:10;:19;1649:28;;;::::0;::::1;;1688:42;::::0;:10:::1;::::0;1708:21:::1;1688:42:::0;::::1;;;::::0;::::1;::::0;;;1708:21;1688:10;:42;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;1593:145::o:0;1034:229::-;1100:7;1119:16;1138:14;:12;:14::i;:::-;1211:4;1189:18;;1188:27;;;;;;-1:-1:-1;;1034:229:3:o;408:38::-;;;-1:-1:-1;;;;;408:38:3;;:::o;606:246::-;674:8;;701:28;719:9;701:17;:28::i;:::-;:40;;693:49;;;;;;-1:-1:-1;783:10:3;758:24;:36;;;;;;;;;;:49;;798:9;758:49;;;-1:-1:-1;818:26:3;;;;;;;;;;;;;-1:-1:-1;;;;;;818:26:3;;;;;;606:246::o;381:20::-;;;-1:-1:-1;;;;;381:20:3;;:::o;282:59::-;;;;;;;;;;;;;;:::o;860:166::-;951:9;;:27;;;-1:-1:-1;;;951:27:3;;;;905:7;;;;-1:-1:-1;;;;;951:9:3;;;;:25;;:27;;;;;-1:-1:-1;;951:27:3;;;;;;;;:9;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;951:27:3;;;1013:4;1004:13;;-1:-1:-1;;860:166:3;:::o;348:26::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;348:26:3;;-1:-1:-1;348:26:3;:::o;1271:226::-;1313:7;1352:9;1313:7;1388:14;:12;:14::i;:::-;1372:30;-1:-1:-1;1433:8:3;1372:30;1460:20;;;1372:30;1459;;;;;1452:37;;;;;1271:226;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    212,
    1747
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x86 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x93C0C8D9 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x9E87A5CD EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0xC0ABDA2A EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xD321FE29 EQ PUSH2 0x191 JUMPI PUSH2 0x86 JUMP JUMPDEST DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x6E5B6B28 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x741BEF1A EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x839A5937 EQ PUSH2 0x102 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93 PUSH2 0x1A6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x203 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE6 PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x93 PUSH2 0x232 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE6 PUSH2 0x2A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBF PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2B5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBF PUSH2 0x2C7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x18A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x354 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBF PUSH2 0x37B JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x200 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x20E PUSH2 0x2C7 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 SWAP4 MUL SWAP3 SWAP1 SWAP3 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH8 0x4563918244F40000 DUP1 PUSH2 0x245 CALLVALUE PUSH2 0x203 JUMP JUMPDEST LT ISZERO PUSH2 0x250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD CALLVALUE ADD SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE SWAP2 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x32C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 ADD MLOAD PUSH5 0x2540BE400 MUL SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x361 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH9 0x2B5E3AF16B1880000 DUP2 PUSH2 0x390 PUSH2 0x2C7 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 DUP4 DUP3 MUL DUP2 PUSH2 0x3A6 JUMPI INVALID JUMPDEST DIV SWAP4 POP POP POP POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP SHR 0xE0 0xF7 0xAA ADDMOD ISZERO 0xF 0x1F PUSH6 0x86A4D0F3D54 0x2D JUMPDEST 0x4C DUP5 0xAA 0xD1 0xE9 0xB9 ADDMOD 0x5C RETURNDATACOPY SGT 0x4C EXP 0x29 0x2A PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        212,
        1747
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "LT",
      "path": "3"
    },
    "9": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x86"
    },
    "12": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "13": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "SHR",
      "path": "3"
    },
    "19": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "DUP1",
      "path": "3"
    },
    "20": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8DA5CB5B"
    },
    "25": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "GT",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x59"
    },
    "29": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "30": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "DUP1",
      "path": "3"
    },
    "31": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8DA5CB5B"
    },
    "36": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "EQ",
      "path": "3"
    },
    "37": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10A"
    },
    "40": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "41": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "DUP1",
      "path": "3"
    },
    "42": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x93C0C8D9"
    },
    "47": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "EQ",
      "path": "3"
    },
    "48": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11F"
    },
    "51": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "52": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "DUP1",
      "path": "3"
    },
    "53": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x9E87A5CD"
    },
    "58": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "EQ",
      "path": "3"
    },
    "59": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x152"
    },
    "62": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "63": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "DUP1",
      "path": "3"
    },
    "64": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xC0ABDA2A"
    },
    "69": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "EQ",
      "path": "3"
    },
    "70": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x167"
    },
    "73": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "74": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "DUP1",
      "path": "3"
    },
    "75": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xD321FE29"
    },
    "80": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "EQ",
      "path": "3"
    },
    "81": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x191"
    },
    "84": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "85": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x86"
    },
    "88": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "JUMP",
      "path": "3"
    },
    "89": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "90": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "DUP1",
      "path": "3"
    },
    "91": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x3CCFD60B"
    },
    "96": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "EQ",
      "path": "3"
    },
    "97": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8B"
    },
    "100": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "101": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "DUP1",
      "path": "3"
    },
    "102": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6E5B6B28"
    },
    "107": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "EQ",
      "path": "3"
    },
    "108": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x95"
    },
    "111": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "112": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "DUP1",
      "path": "3"
    },
    "113": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x741BEF1A"
    },
    "118": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "EQ",
      "path": "3"
    },
    "119": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD1"
    },
    "122": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "123": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "DUP1",
      "path": "3"
    },
    "124": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x839A5937"
    },
    "129": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "EQ",
      "path": "3"
    },
    "130": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x102"
    },
    "133": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "134": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "135": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "137": {
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "DUP1",
      "path": "3"
    },
    "138": {
      "first_revert": true,
      "fn": null,
      "offset": [
        212,
        1747
      ],
      "op": "REVERT",
      "path": "3"
    },
    "139": {
      "fn": "demoTest.withdraw",
      "offset": [
        1593,
        1738
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "140": {
      "fn": "demoTest.withdraw",
      "offset": [
        1593,
        1738
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x93"
    },
    "143": {
      "fn": "demoTest.withdraw",
      "offset": [
        1593,
        1738
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A6"
    },
    "146": {
      "fn": "demoTest.withdraw",
      "jump": "i",
      "offset": [
        1593,
        1738
      ],
      "op": "JUMP",
      "path": "3"
    },
    "147": {
      "fn": "demoTest.withdraw",
      "offset": [
        1593,
        1738
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "148": {
      "fn": "demoTest.withdraw",
      "offset": [
        1593,
        1738
      ],
      "op": "STOP",
      "path": "3"
    },
    "149": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "150": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "151": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "DUP1",
      "path": "3"
    },
    "152": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "153": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA1"
    },
    "156": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "157": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "159": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "DUP1",
      "path": "3"
    },
    "160": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "REVERT",
      "path": "3"
    },
    "161": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "162": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "POP",
      "path": "3"
    },
    "163": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBF"
    },
    "166": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "168": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "DUP1",
      "path": "3"
    },
    "169": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "170": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "SUB",
      "path": "3"
    },
    "171": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "173": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "174": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "LT",
      "path": "3"
    },
    "175": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "176": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB8"
    },
    "179": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "180": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "182": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "DUP1",
      "path": "3"
    },
    "183": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "REVERT",
      "path": "3"
    },
    "184": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "185": {
      "op": "POP"
    },
    "186": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "187": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x203"
    },
    "190": {
      "fn": "demoTest.getConversionRate",
      "jump": "i",
      "offset": [
        1034,
        1263
      ],
      "op": "JUMP",
      "path": "3"
    },
    "191": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "192": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "194": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "DUP1",
      "path": "3"
    },
    "195": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "196": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "197": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "DUP3",
      "path": "3"
    },
    "198": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "199": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "200": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "201": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "202": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "203": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "SUB",
      "path": "3"
    },
    "204": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "206": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "ADD",
      "path": "3"
    },
    "207": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "208": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "RETURN",
      "path": "3"
    },
    "209": {
      "offset": [
        408,
        446
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "210": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        408,
        446
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "211": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        408,
        446
      ],
      "op": "DUP1",
      "path": "3"
    },
    "212": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        408,
        446
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "213": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        408,
        446
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDD"
    },
    "216": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        408,
        446
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "217": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        408,
        446
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "219": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        408,
        446
      ],
      "op": "DUP1",
      "path": "3"
    },
    "220": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        408,
        446
      ],
      "op": "REVERT",
      "path": "3"
    },
    "221": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        408,
        446
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "222": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        408,
        446
      ],
      "op": "POP",
      "path": "3"
    },
    "223": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        408,
        446
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE6"
    },
    "226": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        408,
        446
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x223"
    },
    "229": {
      "fn": "demoTest.getConversionRate",
      "jump": "i",
      "offset": [
        408,
        446
      ],
      "op": "JUMP",
      "path": "3"
    },
    "230": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        408,
        446
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "231": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        408,
        446
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "233": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        408,
        446
      ],
      "op": "DUP1",
      "path": "3"
    },
    "234": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        408,
        446
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "239": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "241": {
      "op": "SHL"
    },
    "242": {
      "op": "SUB"
    },
    "243": {
      "offset": [
        408,
        446
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "244": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        408,
        446
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "245": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        408,
        446
      ],
      "op": "AND",
      "path": "3"
    },
    "246": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        408,
        446
      ],
      "op": "DUP3",
      "path": "3"
    },
    "247": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        408,
        446
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "248": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        408,
        446
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "249": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        408,
        446
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "250": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        408,
        446
      ],
      "op": "DUP2",
      "path": "3"
    },
    "251": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        408,
        446
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "252": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        408,
        446
      ],
      "op": "SUB",
      "path": "3"
    },
    "253": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        408,
        446
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "255": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        408,
        446
      ],
      "op": "ADD",
      "path": "3"
    },
    "256": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        408,
        446
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "257": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        408,
        446
      ],
      "op": "RETURN",
      "path": "3"
    },
    "258": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        606,
        852
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "259": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        606,
        852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x93"
    },
    "262": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        606,
        852
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x232"
    },
    "265": {
      "fn": "demoTest.paymentFinal",
      "jump": "i",
      "offset": [
        606,
        852
      ],
      "op": "JUMP",
      "path": "3"
    },
    "266": {
      "offset": [
        381,
        401
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "267": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        381,
        401
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "268": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        381,
        401
      ],
      "op": "DUP1",
      "path": "3"
    },
    "269": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        381,
        401
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "270": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        381,
        401
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x116"
    },
    "273": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        381,
        401
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "274": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        381,
        401
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "276": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        381,
        401
      ],
      "op": "DUP1",
      "path": "3"
    },
    "277": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        381,
        401
      ],
      "op": "REVERT",
      "path": "3"
    },
    "278": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        381,
        401
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "279": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        381,
        401
      ],
      "op": "POP",
      "path": "3"
    },
    "280": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        381,
        401
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE6"
    },
    "283": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        381,
        401
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A6"
    },
    "286": {
      "fn": "demoTest.paymentFinal",
      "jump": "i",
      "offset": [
        381,
        401
      ],
      "op": "JUMP",
      "path": "3"
    },
    "287": {
      "offset": [
        282,
        341
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "288": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "289": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "DUP1",
      "path": "3"
    },
    "290": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "291": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12B"
    },
    "294": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "295": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "297": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "DUP1",
      "path": "3"
    },
    "298": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "REVERT",
      "path": "3"
    },
    "299": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "300": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "POP",
      "path": "3"
    },
    "301": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBF"
    },
    "304": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "306": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "DUP1",
      "path": "3"
    },
    "307": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "308": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "SUB",
      "path": "3"
    },
    "309": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "311": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "DUP2",
      "path": "3"
    },
    "312": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "LT",
      "path": "3"
    },
    "313": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "314": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x142"
    },
    "317": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "318": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "320": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "DUP1",
      "path": "3"
    },
    "321": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "REVERT",
      "path": "3"
    },
    "322": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "323": {
      "op": "POP"
    },
    "324": {
      "offset": [
        282,
        341
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "331": {
      "op": "SHL"
    },
    "332": {
      "op": "SUB"
    },
    "333": {
      "offset": [
        282,
        341
      ],
      "op": "AND",
      "path": "3"
    },
    "334": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B5"
    },
    "337": {
      "fn": "demoTest.paymentFinal",
      "jump": "i",
      "offset": [
        282,
        341
      ],
      "op": "JUMP",
      "path": "3"
    },
    "338": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        860,
        1026
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "339": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        860,
        1026
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "340": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        860,
        1026
      ],
      "op": "DUP1",
      "path": "3"
    },
    "341": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        860,
        1026
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "342": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        860,
        1026
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15E"
    },
    "345": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        860,
        1026
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "346": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        860,
        1026
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "348": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        860,
        1026
      ],
      "op": "DUP1",
      "path": "3"
    },
    "349": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        860,
        1026
      ],
      "op": "REVERT",
      "path": "3"
    },
    "350": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        860,
        1026
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "351": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        860,
        1026
      ],
      "op": "POP",
      "path": "3"
    },
    "352": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        860,
        1026
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBF"
    },
    "355": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        860,
        1026
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C7"
    },
    "358": {
      "fn": "demoTest.getPriceFeed",
      "jump": "i",
      "offset": [
        860,
        1026
      ],
      "op": "JUMP",
      "path": "3"
    },
    "359": {
      "offset": [
        348,
        374
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "360": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "361": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "DUP1",
      "path": "3"
    },
    "362": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "363": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x173"
    },
    "366": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "367": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "369": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "DUP1",
      "path": "3"
    },
    "370": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "REVERT",
      "path": "3"
    },
    "371": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "372": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "POP",
      "path": "3"
    },
    "373": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE6"
    },
    "376": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "378": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "DUP1",
      "path": "3"
    },
    "379": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "380": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "SUB",
      "path": "3"
    },
    "381": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "383": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "DUP2",
      "path": "3"
    },
    "384": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "LT",
      "path": "3"
    },
    "385": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "386": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18A"
    },
    "389": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "390": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "392": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "DUP1",
      "path": "3"
    },
    "393": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "REVERT",
      "path": "3"
    },
    "394": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "395": {
      "op": "POP"
    },
    "396": {
      "offset": [
        348,
        374
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "397": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x354"
    },
    "400": {
      "fn": "demoTest.getPriceFeed",
      "jump": "i",
      "offset": [
        348,
        374
      ],
      "op": "JUMP",
      "path": "3"
    },
    "401": {
      "fn": "demoTest.getAmount",
      "offset": [
        1271,
        1497
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "402": {
      "fn": "demoTest.getAmount",
      "offset": [
        1271,
        1497
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "403": {
      "fn": "demoTest.getAmount",
      "offset": [
        1271,
        1497
      ],
      "op": "DUP1",
      "path": "3"
    },
    "404": {
      "fn": "demoTest.getAmount",
      "offset": [
        1271,
        1497
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "405": {
      "fn": "demoTest.getAmount",
      "offset": [
        1271,
        1497
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19D"
    },
    "408": {
      "fn": "demoTest.getAmount",
      "offset": [
        1271,
        1497
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "409": {
      "fn": "demoTest.getAmount",
      "offset": [
        1271,
        1497
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "411": {
      "fn": "demoTest.getAmount",
      "offset": [
        1271,
        1497
      ],
      "op": "DUP1",
      "path": "3"
    },
    "412": {
      "fn": "demoTest.getAmount",
      "offset": [
        1271,
        1497
      ],
      "op": "REVERT",
      "path": "3"
    },
    "413": {
      "fn": "demoTest.getAmount",
      "offset": [
        1271,
        1497
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "414": {
      "fn": "demoTest.getAmount",
      "offset": [
        1271,
        1497
      ],
      "op": "POP",
      "path": "3"
    },
    "415": {
      "fn": "demoTest.getAmount",
      "offset": [
        1271,
        1497
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBF"
    },
    "418": {
      "fn": "demoTest.getAmount",
      "offset": [
        1271,
        1497
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x37B"
    },
    "421": {
      "fn": "demoTest.getAmount",
      "jump": "i",
      "offset": [
        1271,
        1497
      ],
      "op": "JUMP",
      "path": "3"
    },
    "422": {
      "fn": "demoTest.withdraw",
      "offset": [
        1593,
        1738
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "423": {
      "offset": [
        1559,
        1564
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "425": {
      "fn": "demoTest.withdraw",
      "offset": [
        1559,
        1564
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "426": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "430": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "432": {
      "op": "SHL"
    },
    "433": {
      "op": "SUB"
    },
    "434": {
      "offset": [
        1559,
        1564
      ],
      "op": "AND",
      "path": "3"
    },
    "435": {
      "offset": [
        1545,
        1555
      ],
      "op": "CALLER",
      "path": "3"
    },
    "436": {
      "offset": [
        1545,
        1564
      ],
      "op": "EQ",
      "path": "3"
    },
    "437": {
      "offset": [
        1537,
        1565
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1BD"
    },
    "440": {
      "offset": [
        1537,
        1565
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "441": {
      "fn": "demoTest.withdraw",
      "offset": [
        1537,
        1565
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "443": {
      "fn": "demoTest.withdraw",
      "offset": [
        1537,
        1565
      ],
      "op": "DUP1",
      "path": "3"
    },
    "444": {
      "fn": "demoTest.withdraw",
      "offset": [
        1537,
        1565
      ],
      "op": "REVERT",
      "path": "3"
    },
    "445": {
      "fn": "demoTest.withdraw",
      "offset": [
        1537,
        1565
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "446": {
      "fn": "demoTest.withdraw",
      "offset": [
        1671,
        1676
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 0,
      "value": "0x2"
    },
    "448": {
      "fn": "demoTest.withdraw",
      "offset": [
        1671,
        1676
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "453": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "455": {
      "op": "SHL"
    },
    "456": {
      "op": "SUB"
    },
    "457": {
      "fn": "demoTest.withdraw",
      "offset": [
        1671,
        1676
      ],
      "op": "AND",
      "path": "3"
    },
    "458": {
      "fn": "demoTest.withdraw",
      "offset": [
        1657,
        1667
      ],
      "op": "CALLER",
      "path": "3"
    },
    "459": {
      "branch": 7,
      "fn": "demoTest.withdraw",
      "offset": [
        1657,
        1676
      ],
      "op": "EQ",
      "path": "3"
    },
    "460": {
      "fn": "demoTest.withdraw",
      "offset": [
        1649,
        1677
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D4"
    },
    "463": {
      "branch": 7,
      "fn": "demoTest.withdraw",
      "offset": [
        1649,
        1677
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "464": {
      "fn": "demoTest.withdraw",
      "offset": [
        1649,
        1677
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "466": {
      "fn": "demoTest.withdraw",
      "offset": [
        1649,
        1677
      ],
      "op": "DUP1",
      "path": "3"
    },
    "467": {
      "fn": "demoTest.withdraw",
      "offset": [
        1649,
        1677
      ],
      "op": "REVERT",
      "path": "3"
    },
    "468": {
      "fn": "demoTest.withdraw",
      "offset": [
        1649,
        1677
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "469": {
      "fn": "demoTest.withdraw",
      "offset": [
        1688,
        1730
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 1,
      "value": "0x40"
    },
    "471": {
      "fn": "demoTest.withdraw",
      "offset": [
        1688,
        1730
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "472": {
      "fn": "demoTest.withdraw",
      "offset": [
        1688,
        1698
      ],
      "op": "CALLER",
      "path": "3"
    },
    "473": {
      "fn": "demoTest.withdraw",
      "offset": [
        1688,
        1698
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "474": {
      "fn": "demoTest.withdraw",
      "offset": [
        1708,
        1729
      ],
      "op": "SELFBALANCE",
      "path": "3"
    },
    "475": {
      "fn": "demoTest.withdraw",
      "offset": [
        1688,
        1730
      ],
      "op": "DUP1",
      "path": "3"
    },
    "476": {
      "fn": "demoTest.withdraw",
      "offset": [
        1688,
        1730
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "477": {
      "fn": "demoTest.withdraw",
      "offset": [
        1688,
        1730
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8FC"
    },
    "480": {
      "fn": "demoTest.withdraw",
      "offset": [
        1688,
        1730
      ],
      "op": "MUL",
      "path": "3"
    },
    "481": {
      "fn": "demoTest.withdraw",
      "offset": [
        1688,
        1730
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "482": {
      "fn": "demoTest.withdraw",
      "offset": [
        1688,
        1730
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "484": {
      "fn": "demoTest.withdraw",
      "offset": [
        1688,
        1730
      ],
      "op": "DUP2",
      "path": "3"
    },
    "485": {
      "fn": "demoTest.withdraw",
      "offset": [
        1688,
        1730
      ],
      "op": "DUP2",
      "path": "3"
    },
    "486": {
      "fn": "demoTest.withdraw",
      "offset": [
        1688,
        1730
      ],
      "op": "DUP2",
      "path": "3"
    },
    "487": {
      "fn": "demoTest.withdraw",
      "offset": [
        1708,
        1729
      ],
      "op": "DUP6",
      "path": "3"
    },
    "488": {
      "fn": "demoTest.withdraw",
      "offset": [
        1688,
        1698
      ],
      "op": "DUP9",
      "path": "3"
    },
    "489": {
      "fn": "demoTest.withdraw",
      "offset": [
        1688,
        1730
      ],
      "op": "DUP9",
      "path": "3"
    },
    "490": {
      "fn": "demoTest.withdraw",
      "offset": [
        1688,
        1730
      ],
      "op": "CALL",
      "path": "3"
    },
    "491": {
      "fn": "demoTest.withdraw",
      "offset": [
        1688,
        1730
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "492": {
      "fn": "demoTest.withdraw",
      "offset": [
        1688,
        1730
      ],
      "op": "POP",
      "path": "3"
    },
    "493": {
      "fn": "demoTest.withdraw",
      "offset": [
        1688,
        1730
      ],
      "op": "POP",
      "path": "3"
    },
    "494": {
      "fn": "demoTest.withdraw",
      "offset": [
        1688,
        1730
      ],
      "op": "POP",
      "path": "3"
    },
    "495": {
      "fn": "demoTest.withdraw",
      "offset": [
        1688,
        1730
      ],
      "op": "POP",
      "path": "3"
    },
    "496": {
      "fn": "demoTest.withdraw",
      "offset": [
        1688,
        1730
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "497": {
      "fn": "demoTest.withdraw",
      "offset": [
        1688,
        1730
      ],
      "op": "DUP1",
      "path": "3"
    },
    "498": {
      "fn": "demoTest.withdraw",
      "offset": [
        1688,
        1730
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "499": {
      "fn": "demoTest.withdraw",
      "offset": [
        1688,
        1730
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x200"
    },
    "502": {
      "fn": "demoTest.withdraw",
      "offset": [
        1688,
        1730
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "503": {
      "fn": "demoTest.withdraw",
      "offset": [
        1688,
        1730
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "504": {
      "fn": "demoTest.withdraw",
      "offset": [
        1688,
        1730
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "506": {
      "fn": "demoTest.withdraw",
      "offset": [
        1688,
        1730
      ],
      "op": "DUP1",
      "path": "3"
    },
    "507": {
      "fn": "demoTest.withdraw",
      "offset": [
        1688,
        1730
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "508": {
      "fn": "demoTest.withdraw",
      "offset": [
        1688,
        1730
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "509": {
      "fn": "demoTest.withdraw",
      "offset": [
        1688,
        1730
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "511": {
      "fn": "demoTest.withdraw",
      "offset": [
        1688,
        1730
      ],
      "op": "REVERT",
      "path": "3"
    },
    "512": {
      "fn": "demoTest.withdraw",
      "offset": [
        1688,
        1730
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "513": {
      "fn": "demoTest.withdraw",
      "offset": [
        1688,
        1730
      ],
      "op": "POP",
      "path": "3"
    },
    "514": {
      "fn": "demoTest.withdraw",
      "jump": "o",
      "offset": [
        1593,
        1738
      ],
      "op": "JUMP",
      "path": "3"
    },
    "515": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1034,
        1263
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "516": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1100,
        1107
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "518": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1119,
        1135
      ],
      "op": "DUP1",
      "path": "3"
    },
    "519": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1138,
        1152
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x20E"
    },
    "522": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1138,
        1150
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C7"
    },
    "525": {
      "fn": "demoTest.getConversionRate",
      "jump": "i",
      "offset": [
        1138,
        1152
      ],
      "op": "JUMP",
      "path": "3"
    },
    "526": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1138,
        1152
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "527": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1211,
        1215
      ],
      "op": "PUSH8",
      "path": "3",
      "value": "0xDE0B6B3A7640000"
    },
    "536": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1189,
        1207
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "537": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1189,
        1207
      ],
      "op": "MUL",
      "path": "3"
    },
    "538": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1188,
        1215
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "539": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1188,
        1215
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "540": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1188,
        1215
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "541": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1188,
        1215
      ],
      "op": "DIV",
      "path": "3"
    },
    "542": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1188,
        1215
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "543": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        1188,
        1215
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "544": {
      "op": "POP"
    },
    "545": {
      "op": "POP"
    },
    "546": {
      "fn": "demoTest.getConversionRate",
      "jump": "o",
      "offset": [
        1034,
        1263
      ],
      "op": "JUMP",
      "path": "3"
    },
    "547": {
      "offset": [
        408,
        446
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "548": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        408,
        446
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "550": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        408,
        446
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "557": {
      "op": "SHL"
    },
    "558": {
      "op": "SUB"
    },
    "559": {
      "offset": [
        408,
        446
      ],
      "op": "AND",
      "path": "3"
    },
    "560": {
      "fn": "demoTest.getConversionRate",
      "offset": [
        408,
        446
      ],
      "op": "DUP2",
      "path": "3"
    },
    "561": {
      "fn": "demoTest.getConversionRate",
      "jump": "o",
      "offset": [
        408,
        446
      ],
      "op": "JUMP",
      "path": "3"
    },
    "562": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        606,
        852
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "563": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        674,
        682
      ],
      "op": "PUSH8",
      "path": "3",
      "value": "0x4563918244F40000"
    },
    "572": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        674,
        682
      ],
      "op": "DUP1",
      "path": "3"
    },
    "573": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        701,
        729
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 2,
      "value": "0x245"
    },
    "576": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        719,
        728
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "577": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        701,
        718
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x203"
    },
    "580": {
      "fn": "demoTest.paymentFinal",
      "jump": "i",
      "offset": [
        701,
        729
      ],
      "op": "JUMP",
      "path": "3"
    },
    "581": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        701,
        729
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "582": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        701,
        741
      ],
      "op": "LT",
      "path": "3"
    },
    "583": {
      "branch": 8,
      "fn": "demoTest.paymentFinal",
      "offset": [
        701,
        741
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "584": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        693,
        742
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x250"
    },
    "587": {
      "branch": 8,
      "fn": "demoTest.paymentFinal",
      "offset": [
        693,
        742
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "588": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        693,
        742
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "590": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        693,
        742
      ],
      "op": "DUP1",
      "path": "3"
    },
    "591": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        693,
        742
      ],
      "op": "REVERT",
      "path": "3"
    },
    "592": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        693,
        742
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "593": {
      "op": "POP"
    },
    "594": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        783,
        793
      ],
      "op": "CALLER",
      "path": "3",
      "statement": 3
    },
    "595": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        758,
        782
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "597": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        758,
        794
      ],
      "op": "DUP2",
      "path": "3"
    },
    "598": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        758,
        794
      ],
      "op": "DUP2",
      "path": "3"
    },
    "599": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        758,
        794
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "600": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        758,
        794
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "602": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        758,
        794
      ],
      "op": "DUP2",
      "path": "3"
    },
    "603": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        758,
        794
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "604": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        758,
        794
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "605": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        758,
        794
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "607": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        758,
        794
      ],
      "op": "DUP2",
      "path": "3"
    },
    "608": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        758,
        794
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "609": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        758,
        807
      ],
      "op": "DUP1",
      "path": "3"
    },
    "610": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        758,
        807
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "611": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        798,
        807
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "612": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        758,
        807
      ],
      "op": "ADD",
      "path": "3"
    },
    "613": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        758,
        807
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "614": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        758,
        807
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "617": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        818,
        844
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 4
    },
    "618": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        818,
        844
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "619": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        818,
        844
      ],
      "op": "DUP1",
      "path": "3"
    },
    "620": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        818,
        844
      ],
      "op": "DUP3",
      "path": "3"
    },
    "621": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        818,
        844
      ],
      "op": "ADD",
      "path": "3"
    },
    "622": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        818,
        844
      ],
      "op": "DUP3",
      "path": "3"
    },
    "623": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        818,
        844
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "624": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        818,
        844
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "625": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        818,
        844
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "626": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        818,
        844
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6"
    },
    "659": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        818,
        844
      ],
      "op": "ADD",
      "path": "3"
    },
    "660": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        818,
        844
      ],
      "op": "DUP1",
      "path": "3"
    },
    "661": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        818,
        844
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "662": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "666": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "668": {
      "op": "SHL"
    },
    "669": {
      "op": "SUB"
    },
    "670": {
      "op": "NOT"
    },
    "671": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        818,
        844
      ],
      "op": "AND",
      "path": "3"
    },
    "672": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        818,
        844
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "673": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        818,
        844
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "674": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        818,
        844
      ],
      "op": "OR",
      "path": "3"
    },
    "675": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        818,
        844
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "676": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        818,
        844
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "677": {
      "fn": "demoTest.paymentFinal",
      "jump": "o",
      "offset": [
        606,
        852
      ],
      "op": "JUMP",
      "path": "3"
    },
    "678": {
      "offset": [
        381,
        401
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "679": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        381,
        401
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "681": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        381,
        401
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "682": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "686": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "688": {
      "op": "SHL"
    },
    "689": {
      "op": "SUB"
    },
    "690": {
      "offset": [
        381,
        401
      ],
      "op": "AND",
      "path": "3"
    },
    "691": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        381,
        401
      ],
      "op": "DUP2",
      "path": "3"
    },
    "692": {
      "fn": "demoTest.paymentFinal",
      "jump": "o",
      "offset": [
        381,
        401
      ],
      "op": "JUMP",
      "path": "3"
    },
    "693": {
      "offset": [
        282,
        341
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "694": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "696": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "698": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "DUP2",
      "path": "3"
    },
    "699": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "700": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "701": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "702": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "DUP2",
      "path": "3"
    },
    "703": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "704": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "706": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "707": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "708": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "709": {
      "fn": "demoTest.paymentFinal",
      "offset": [
        282,
        341
      ],
      "op": "DUP2",
      "path": "3"
    },
    "710": {
      "fn": "demoTest.paymentFinal",
      "jump": "o",
      "offset": [
        282,
        341
      ],
      "op": "JUMP",
      "path": "3"
    },
    "711": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        860,
        1026
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "712": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "714": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        960
      ],
      "op": "DUP1",
      "path": "3"
    },
    "715": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "717": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "719": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "720": {
      "op": "SLOAD"
    },
    "721": {
      "op": "SWAP1"
    },
    "722": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "725": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "EXP",
      "path": "3"
    },
    "726": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "727": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "DIV",
      "path": "3"
    },
    "728": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "730": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        905,
        912
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "732": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        905,
        912
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA0"
    },
    "734": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        905,
        912
      ],
      "op": "SHL",
      "path": "3"
    },
    "735": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        905,
        912
      ],
      "op": "SUB",
      "path": "3"
    },
    "736": {
      "op": "AND"
    },
    "737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "741": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "743": {
      "op": "SHL"
    },
    "744": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        960
      ],
      "op": "SUB",
      "path": "3"
    },
    "745": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        960
      ],
      "op": "AND",
      "path": "3"
    },
    "746": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        960
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFEAF968C"
    },
    "751": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        960
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "753": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        976
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "754": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        976
      ],
      "op": "DUP2",
      "path": "3"
    },
    "755": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "760": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "AND",
      "path": "3"
    },
    "761": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "763": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "SHL",
      "path": "3"
    },
    "764": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "DUP2",
      "path": "3"
    },
    "765": {
      "op": "MSTORE"
    },
    "766": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "768": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "ADD",
      "path": "3"
    },
    "769": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA0"
    },
    "771": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "773": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "774": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "DUP1",
      "path": "3"
    },
    "775": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "DUP4",
      "path": "3"
    },
    "776": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "SUB",
      "path": "3"
    },
    "777": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "DUP2",
      "path": "3"
    },
    "778": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        960
      ],
      "op": "DUP7",
      "path": "3"
    },
    "779": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "DUP1",
      "path": "3"
    },
    "780": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "781": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "782": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "DUP1",
      "path": "3"
    },
    "783": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "784": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x318"
    },
    "787": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "788": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "790": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "DUP1",
      "path": "3"
    },
    "791": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "REVERT",
      "path": "3"
    },
    "792": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "793": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "POP",
      "path": "3"
    },
    "794": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "GAS",
      "path": "3"
    },
    "795": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "796": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "797": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "DUP1",
      "path": "3"
    },
    "798": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "799": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x32C"
    },
    "802": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "803": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "804": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "806": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "DUP1",
      "path": "3"
    },
    "807": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "808": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "809": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "811": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "REVERT",
      "path": "3"
    },
    "812": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "813": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "POP",
      "path": "3"
    },
    "814": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "POP",
      "path": "3"
    },
    "815": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "POP",
      "path": "3"
    },
    "816": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "POP",
      "path": "3"
    },
    "817": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "819": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "820": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "821": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xA0"
    },
    "823": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "DUP2",
      "path": "3"
    },
    "824": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "LT",
      "path": "3"
    },
    "825": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "826": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x342"
    },
    "829": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "830": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "832": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "DUP1",
      "path": "3"
    },
    "833": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "REVERT",
      "path": "3"
    },
    "834": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "835": {
      "op": "POP"
    },
    "836": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "838": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "ADD",
      "path": "3"
    },
    "839": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        951,
        978
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "840": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        1013,
        1017
      ],
      "op": "PUSH5",
      "path": "3",
      "statement": 5,
      "value": "0x2540BE400"
    },
    "846": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        1004,
        1017
      ],
      "op": "MUL",
      "path": "3"
    },
    "847": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        1004,
        1017
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "848": {
      "op": "POP"
    },
    "849": {
      "op": "POP"
    },
    "850": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        860,
        1026
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "851": {
      "fn": "demoTest.getPriceFeed",
      "jump": "o",
      "offset": [
        860,
        1026
      ],
      "op": "JUMP",
      "path": "3"
    },
    "852": {
      "offset": [
        348,
        374
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "853": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "855": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "DUP2",
      "path": "3"
    },
    "856": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "DUP2",
      "path": "3"
    },
    "857": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "858": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "DUP2",
      "path": "3"
    },
    "859": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "LT",
      "path": "3"
    },
    "860": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x361"
    },
    "863": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "864": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "INVALID",
      "path": "3"
    },
    "865": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "866": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "868": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "869": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "DUP3",
      "path": "3"
    },
    "870": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "871": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "873": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "874": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "875": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "876": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "ADD",
      "path": "3"
    },
    "877": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "882": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "884": {
      "op": "SHL"
    },
    "885": {
      "op": "SUB"
    },
    "886": {
      "offset": [
        348,
        374
      ],
      "op": "AND",
      "path": "3"
    },
    "887": {
      "fn": "demoTest.getPriceFeed",
      "offset": [
        348,
        374
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "888": {
      "op": "POP"
    },
    "889": {
      "offset": [
        348,
        374
      ],
      "op": "DUP2",
      "path": "3"
    },
    "890": {
      "fn": "demoTest.getPriceFeed",
      "jump": "o",
      "offset": [
        348,
        374
      ],
      "op": "JUMP",
      "path": "3"
    },
    "891": {
      "fn": "demoTest.getAmount",
      "offset": [
        1271,
        1497
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "892": {
      "fn": "demoTest.getAmount",
      "offset": [
        1313,
        1320
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "894": {
      "fn": "demoTest.getAmount",
      "offset": [
        1352,
        1361
      ],
      "op": "PUSH9",
      "path": "3",
      "value": "0x2B5E3AF16B1880000"
    },
    "904": {
      "fn": "demoTest.getAmount",
      "offset": [
        1313,
        1320
      ],
      "op": "DUP2",
      "path": "3"
    },
    "905": {
      "fn": "demoTest.getAmount",
      "offset": [
        1388,
        1402
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x390"
    },
    "908": {
      "fn": "demoTest.getAmount",
      "offset": [
        1388,
        1400
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C7"
    },
    "911": {
      "fn": "demoTest.getAmount",
      "jump": "i",
      "offset": [
        1388,
        1402
      ],
      "op": "JUMP",
      "path": "3"
    },
    "912": {
      "fn": "demoTest.getAmount",
      "offset": [
        1388,
        1402
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "913": {
      "fn": "demoTest.getAmount",
      "offset": [
        1372,
        1402
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "914": {
      "op": "POP"
    },
    "915": {
      "fn": "demoTest.getAmount",
      "offset": [
        1433,
        1441
      ],
      "op": "PUSH8",
      "path": "3",
      "value": "0xDE0B6B3A7640000"
    },
    "924": {
      "fn": "demoTest.getAmount",
      "offset": [
        1372,
        1402
      ],
      "op": "DUP2",
      "path": "3"
    },
    "925": {
      "fn": "demoTest.getAmount",
      "offset": [
        1460,
        1480
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 6
    },
    "926": {
      "fn": "demoTest.getAmount",
      "offset": [
        1460,
        1480
      ],
      "op": "DUP3",
      "path": "3"
    },
    "927": {
      "fn": "demoTest.getAmount",
      "offset": [
        1460,
        1480
      ],
      "op": "MUL",
      "path": "3"
    },
    "928": {
      "fn": "demoTest.getAmount",
      "offset": [
        1372,
        1402
      ],
      "op": "DUP2",
      "path": "3"
    },
    "929": {
      "fn": "demoTest.getAmount",
      "offset": [
        1459,
        1489
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A6"
    },
    "932": {
      "fn": "demoTest.getAmount",
      "offset": [
        1459,
        1489
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "933": {
      "dev": "Division by zero",
      "fn": "demoTest.getAmount",
      "offset": [
        1459,
        1489
      ],
      "op": "INVALID",
      "path": "3"
    },
    "934": {
      "fn": "demoTest.getAmount",
      "offset": [
        1459,
        1489
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "935": {
      "fn": "demoTest.getAmount",
      "offset": [
        1459,
        1489
      ],
      "op": "DIV",
      "path": "3"
    },
    "936": {
      "fn": "demoTest.getAmount",
      "offset": [
        1452,
        1489
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "937": {
      "fn": "demoTest.getAmount",
      "offset": [
        1452,
        1489
      ],
      "op": "POP",
      "path": "3"
    },
    "938": {
      "fn": "demoTest.getAmount",
      "offset": [
        1452,
        1489
      ],
      "op": "POP",
      "path": "3"
    },
    "939": {
      "fn": "demoTest.getAmount",
      "offset": [
        1452,
        1489
      ],
      "op": "POP",
      "path": "3"
    },
    "940": {
      "fn": "demoTest.getAmount",
      "offset": [
        1452,
        1489
      ],
      "op": "POP",
      "path": "3"
    },
    "941": {
      "fn": "demoTest.getAmount",
      "offset": [
        1271,
        1497
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "942": {
      "fn": "demoTest.getAmount",
      "jump": "o",
      "offset": [
        1271,
        1497
      ],
      "op": "JUMP",
      "path": "3"
    }
  },
  "sha1": "893dd2f31a74f143bd4a3e5ceb6856101dccbd0d",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.6;\n\nimport \"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\";\nimport \"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\";\n\ncontract demoTest{\n\n    using SafeMathChainlink for uint256;\n\n    mapping(address => uint256) public addressToAmountCustomers;\n    address[] public customers;\n    address public owner;\n    AggregatorV3Interface public priceFeed;\n    \n    constructor(address _priceFeed) public{\n        owner = msg.sender;\n        priceFeed = AggregatorV3Interface(_priceFeed);\n    }\n\n\n    \n    function paymentFinal() public payable{\n        uint256 floorVal = 5 * 1e18;\n        require(getConversionRate(msg.value) >= floorVal);     \n        addressToAmountCustomers[msg.sender] += msg.value;\n        customers.push(msg.sender);\n    }\n\n    function getPriceFeed() public view returns (uint256) {\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\n        return uint256(answer * 1e10);\n    }\n\n    function getConversionRate(uint256 ethAmount) public view returns(uint256){\n        uint256 ethPrice = getPriceFeed();\n        uint256 ethAmountInUSD = (ethPrice*ethAmount) / 1e18;  // wei\n        return ethAmountInUSD;\n    }\n\n    function getAmount() public view returns (uint256) {\n        uint256 floorVal = 50 * 1e18;\n        uint256 price = getPriceFeed();\n        uint256 precision = 1 * 1e18;\n        return (floorVal * precision) / price;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner);\n        _;\n    }\n\n    function withdraw() public payable onlyOwner {\n        require(msg.sender == owner);\n        msg.sender.transfer(address(this).balance);\n    }\n\n\n\n}",
  "sourceMap": "212:1535:3:-:0;;;459:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;459:131:3;508:5;:18;;516:10;-1:-1:-1;;;;;;508:18:3;;;;;;;537:9;:45;;;;;-1:-1:-1;;;;;537:45:3;;;;;;;;;-1:-1:-1;;212:1535:3;-1:-1:-1;212:1535:3;;",
  "sourcePath": "contracts/demoTest.sol",
  "type": "contract"
}